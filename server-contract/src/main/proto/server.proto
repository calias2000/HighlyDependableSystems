//
// Protocol buffers definition
//
syntax = "proto3";
package pt.tecnico.bank.grpc;

option java_multiple_files = true;


message PingRequest {
  string input = 1;
}

message PingResponse {
	string output = 1;
}



message OpenAccountRequest {
  bytes public_key = 1;
  string username = 2;
  bytes signature = 3;
  int32 nonce = 4;
}

message OpenAccountResponse {
  string message = 1;
  bytes public_key = 2;
  bytes signature = 3;
  int32 nonce = 4;
}


message Transaction {
  string username = 1;
  int32 amount = 2;
  bytes public_key = 3;
  bytes signature = 4;
}

message CheckAccountRequest {
  bytes public_key = 1;
  int32 nonce = 4;
}

message CheckAccountResponse {
  int32 balance = 1;
  bytes public_key = 3;
  bytes signature = 4;
  int32 nonce = 5;
  string message = 6;
  repeated Transaction transactions = 7;
}

message SendAmountRequest {
  Transaction transaction = 1;
  bytes receiver_key = 2;
  int32 nonce = 4;
  bytes signature = 5;
}

message SendAmountResponse {
  string message = 1;
  int32 nonce = 2;
  bytes public_key = 4;
  bytes signature = 5;
}



message ReceiveAmountRequest {
  bytes public_key = 1;
  bytes signature = 2;
  int32 transfer = 3;
  int32 nonce = 4;
}

message ReceiveAmountResponse {
  string message = 1;
  int32 nonce = 2;
  bytes public_key = 4;
  bytes signature = 5;
}



message AuditRequest {
  bytes public_key = 1;
  int32 nonce = 4;
}

message AuditResponse {
  repeated string transfer_history = 1;
  bytes public_key = 3;
  bytes signature = 4;
  int32 nonce = 5;
  string message = 6;
}


service ServerService {
  rpc ping(PingRequest) returns (PingResponse);
  rpc openAccount(OpenAccountRequest) returns (OpenAccountResponse);
  rpc sendAmount(SendAmountRequest) returns (SendAmountResponse);
  rpc checkAccount(CheckAccountRequest) returns (CheckAccountResponse);
  rpc receiveAmount(ReceiveAmountRequest) returns (ReceiveAmountResponse);
  rpc audit(AuditRequest) returns (AuditResponse);
}
